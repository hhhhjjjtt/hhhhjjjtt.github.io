[{"content":"Introduction\r","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/p/blog_2025_10_20/","title":"Three-Stage Pipelined RISC-V Processor"},{"content":"Introduction\r","date":"2025-10-07T00:00:00Z","permalink":"http://localhost:1313/p/blog_2025_10_07/","title":"UART module"},{"content":"Introduction\r","date":"2025-10-01T00:00:00Z","permalink":"http://localhost:1313/p/blog_2025_10_01/","title":"Deploying CNN in a PYNQ-Z2 board"},{"content":"Introduction\rThis mini project aims to implement the forward propagation algorithm of Neural Network in C. This is kind of like re-inventing the wheel, but I found it helpful in helping me learn about C and algorithms in ML.\nA Mininal Matrix Library\rSince Forward propagation involves multiplyitng layers with a weight matrix and adding a bias matrix, we need to handle matrix multiplication and addition.\nOther matrix operations minght be helpful, but now we only want to focus on a minimal implementation.\nWe will define a maatrix using the struct in c:\n1 2 3 4 5 typedef struct matrix{ int row; int col; float** data; } matrix; Where a matrix have row, column, and a 2-d array to store its data.\nWe will have functions to allocate memory to our matrix struct, as well as functions to clear them:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 // Allcoate space, and initialize all element value in a matrix to 0 void matInitZero(matrix* input, int row, int col){ input-\u0026gt;row = row; input-\u0026gt;col = col; input-\u0026gt;data = malloc(row * sizeof(float*)); for(int i = 0; i \u0026lt; row; i++){ input-\u0026gt;data[i] = malloc(col * sizeof(float)); for(int j = 0; j \u0026lt; col; j++){ input-\u0026gt;data[i][j] = 0; } } } // Free the memory allocated void matFree(matrix* input){ for(int i = 0; i \u0026lt; input-\u0026gt;row; i++){ free(input-\u0026gt;data[i]); } free(input-\u0026gt;data); } To be continued\u0026hellip;\n","date":"2024-11-12T00:00:00Z","permalink":"http://localhost:1313/p/blog_2024_11_12/","title":"Implementing Forward propagation in C"},{"content":"Introduction\rIn this mini project, we will be using OpenCV as for our image processing, then sned the processed image through uart communication to an Arduino UNO R3 board to be displayed on an max7219 8 x 8 LED display. I\u0026rsquo;ve posted the project repo here\nPython Setup\rFor the python script, We first want to make sure to import the libraries we need\n1 2 import cv2 as cv import serial I will use the Video Bad Apple as an example. The video is 480*360 in size, so to display it on an 8 x 8 screen, we have to compress it.\nWe can achive this by using OpenCV\u0026rsquo;s resize() method\n1 frame = cv.resize(frame, (8, 8), interpolation=cv.INTER_AREA) Then, since the led can\u0026rsquo;t display in RGB, it would be benificial to convert the frame to Grayscale, then to a binary scale. In that way, we can use on/off of the led to diaplay the graphics\n1 2 gray_frame = cv.cvtColor(frame, cv.COLOR_BGR2GRAY) _, binary_frame = cv.threshold(gray_frame, threshold, 1, cv.THRESH_BINARY) we can write these operations as\n1 2 3 4 5 def rescale_to_8_8_binary(frame, threshold=127): frame = cv.resize(frame, (8, 8), interpolation=cv.INTER_AREA) gray_frame = cv.cvtColor(frame, cv.COLOR_BGR2GRAY) _, binary_frame = cv.threshold(gray_frame, threshold, 1, cv.THRESH_BINARY) return binary_frame To transfer the frame data to Arduino via uart communication, we can convert the 8 x 8 frame to an binary array:\n1 2 3 4 5 6 7 8 def binary_frame_to_bytes(binary_frame): byte_array = [] for row in binary_frame: byte = 0 for bit in row: byte = (byte \u0026lt;\u0026lt; 1) | bit byte_array.append(byte) return byte_array This array can be then sent to the Arduino board via uart communication\n1 2 3 binary_frame = rescale_to_8_8_binary(frame) frame_bytes = binary_frame_to_bytes(binary_frame) ser.write(bytearray(frame_bytes)) The full python code is shown as follows:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 import cv2 as cv import serial # To check: first open device manager, then look for \u0026#39;Ports\u0026#39; # and see which port Arduino is connected to ser = serial.Serial(\u0026#39;COM8\u0026#39;, 9600) # Compress a video frame to 8*8 binary freme def rescale_to_8_8_binary(frame, threshold=127): frame = cv.resize(frame, (8, 8), interpolation=cv.INTER_AREA) gray_frame = cv.cvtColor(frame, cv.COLOR_BGR2GRAY) _, binary_frame = cv.threshold(gray_frame, threshold, 1, cv.THRESH_BINARY) return binary_frame # Convert frame to binary array def binary_frame_to_bytes(binary_frame): byte_array = [] for row in binary_frame: byte = 0 for bit in row: byte = (byte \u0026lt;\u0026lt; 1) | bit byte_array.append(byte) return byte_array capture = cv.VideoCapture(\u0026#39;bad_apple.mp4\u0026#39;) print(\u0026#34;Press \\\u0026#34;d\\\u0026#34; to stop\u0026#34;) while True: isTrue, frame = capture.read() if not isTrue: break # Process each frame binary_frame = rescale_to_8_8_binary(frame) frame_bytes = binary_frame_to_bytes(binary_frame) # Transmit frame bytes to Arduino ser.write(bytearray(frame_bytes)) enlarged_frame = cv.resize(binary_frame * 255, (160, 160), interpolation=cv.INTER_NEAREST) cv.imshow(\u0026#39;Enlarged 8x8 Video\u0026#39;, enlarged_frame) cv.imshow(\u0026#39;original Video\u0026#39;, frame) if cv.waitKey(20) \u0026amp; 0xFF == ord(\u0026#39;d\u0026#39;): break empty_screen = [0] * 64 ser.write(bytearray(empty_screen)) capture.release() ser.close() cv.destroyAllWindows() Arduino Setup\rWe will be using the LedControl library found here.\nIn your Arduino IDE, start a new project.\nFirst, we need to connect the right pins to the right port. In this case, I choose pin 12 as DataIn, 11 as CLK, 10 as LOAD.\n1 2 // Pin for MAX7219: DataIn, CLK, LOAD, # of MAX7219s LedControl lc = LedControl(12, 11, 10, 1); We want to start the buald rate at 9600, and clear the screen first.\n1 2 3 4 5 6 void setup() { Serial.begin(9600); lc.shutdown(0, false); lc.setIntensity(0, 8); lc.clearDisplay(0); } Then, we want to listen to the data sent by the python script. Since each frame is 8x8=64 bit, each frame is consist of 8 bytes. Thus, we\u0026rsquo;ll start displaying once we have revieved 8 bytes.\n1 2 3 4 5 6 7 8 void loop() { if (Serial.available() \u0026gt;= 8) { // Wait until 8 bytes (1 frame) are available for (int i = 0; i \u0026lt; 8; i++) { byte rowData = Serial.read(); // Read each row byte lc.setRow(0, i, rowData); // Display the row on the LED matrix } } } The full cpp code is shown as follows:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 #include \u0026lt;LedControl.h\u0026gt; // Pin for MAX7219: DataIn, CLK, LOAD, # of MAX7219s LedControl lc = LedControl(12, 11, 10, 1); void setup() { Serial.begin(9600); lc.shutdown(0, false); lc.setIntensity(0, 8); lc.clearDisplay(0); } void loop() { if (Serial.available() \u0026gt;= 8) { // Wait until 8 bytes (1 frame) are available for (int i = 0; i \u0026lt; 8; i++) { byte rowData = Serial.read(); // Read each row byte lc.setRow(0, i, rowData); // Display the row on the LED matrix } } } ","date":"2024-11-01T00:00:00Z","permalink":"http://localhost:1313/p/blog_2024_11_01/","title":"Display Video on 8*8 LED screen using OpenCV + Arduino"},{"content":"你好\r这里是Jefferson，这是我的第一条博客\n我是一条天狗呀！\n我把月来吞了，\n我把日来吞了，\n我把一切的星球来吞了，\n我把全宇宙来吞了。\n我便是我了！\n我是月的光，\n我是日的光，\n我是一切星球的光，\n我是 X 光线的光，\n我是全宇宙的 Energy 的总量！\n","date":"2024-10-25T00:00:00Z","permalink":"http://localhost:1313/p/blog_2024_10_25/","title":"我的第一条博客"},{"content":"Hello\rI\u0026rsquo;m Jefferson, this is my first blog.\n","date":"2024-10-21T00:00:00Z","permalink":"http://localhost:1313/p/blog_2024_10_21/","title":"My First Blog"},{"content":"正文测试\r而这些并不是完全重要，更加重要的问题是， 带着这些问题，我们来审视一下学生会退会。 既然如何， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 我们不得不面对一个非常尴尬的事实，那就是， 可是，即使是这样，学生会退会的出现仍然代表了一定的意义。 学生会退会，发生了会如何，不发生又会如何。 经过上述讨论， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 学生会退会，到底应该如何实现。 这样看来， 在这种困难的抉择下，本人思来想去，寝食难安。 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 就我个人来说，学生会退会对我的意义，不能不说非常重大。 莎士比亚曾经提到过，人的一生是短的，但如果卑劣地过这一生，就太长了。这似乎解答了我的疑惑。 莫扎特说过一句富有哲理的话，谁和我一样用功，谁就会和我一样成功。这启发了我， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 学生会退会，到底应该如何实现。 一般来说， 从这个角度来看， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 在这种困难的抉择下，本人思来想去，寝食难安。 了解清楚学生会退会到底是一种怎么样的存在，是解决一切问题的关键。 一般来说， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 问题的关键究竟为何？ 而这些并不是完全重要，更加重要的问题是。\n奥斯特洛夫斯基曾经说过，共同的事业，共同的斗争，可以使人们产生忍受一切的力量。　带着这句话，我们还要更加慎重的审视这个问题： 一般来讲，我们都必须务必慎重的考虑考虑。 既然如此， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 带着这些问题，我们来审视一下学生会退会。 我认为， 我认为， 在这种困难的抉择下，本人思来想去，寝食难安。 问题的关键究竟为何？ 每个人都不得不面对这些问题。 在面对这种问题时， 要想清楚，学生会退会，到底是一种怎么样的存在。 我认为， 既然如此， 每个人都不得不面对这些问题。 在面对这种问题时， 那么， 我认为， 学生会退会因何而发生。\n引用\r思念是最暖的忧伤像一双翅膀\n让我停不了飞不远在过往游荡\n不告而别的你 就算为了我着想\n这么沉痛的呵护 我怎么能翱翔\n最暖的憂傷 - 田馥甄\n图片\r1 2 3 ![Photo by Florian Klauer on Unsplash](florian-klauer-nptLmg6jqDo-unsplash.jpg) ![Photo by Luca Bravo on Unsplash](luca-bravo-alS7ewQ41M8-unsplash.jpg) ![Photo by Helena Hertz on Unsplash](helena-hertz-wWZzXlDpMog-unsplash.jpg) ![Photo by Hudai Gayiran on Unsplash](hudai-gayiran-3Od_VKcDEAA-unsplash.jpg) 相册语法来自 Typlog\n","date":"2020-09-09T00:00:00Z","image":"http://localhost:1313/helena-hertz-wWZzXlDpMog-unsplash.jpg","permalink":"http://localhost:1313/p/index.zh-cn/","title":"Chinese Test"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings\rThe following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1\rH2\rH3\rH4\rH5\rH6\rParagraph\rXerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes\rThe blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution\rTiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution\rDon\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables\rTables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables\rItalics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks\rCode block with backticks\r1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces\r\u0026lt;!doctype html\u0026gt;\r\u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt;\r\u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\rCode block with Hugo\u0026rsquo;s internal highlight shortcode\r1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Diff code block\r1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] List Types\rOrdered List\rFirst item Second item Third item Unordered List\rList item Another item And another item Nested list\rFruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark\rGIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL + ALT + Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nHyperlinked image\rThe above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2019-03-11T00:00:00Z","image":"http://localhost:1313/p/markdown-syntax/pawel-czerwinski-8uZPynIu-rQ-unsplash_hu6307248181568134095.jpg","permalink":"http://localhost:1313/p/markdown-syntax/","title":"Markdown Syntax Guide"},{"content":"Hugo ships with several Built-in Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\nYouTube Privacy Enhanced Shortcode\rTwitter Simple Shortcode\r“In addition to being more logical, asymmetry has the advantage that its complete appearance is far more optically effective than symmetry.”\n— Jan Tschichold pic.twitter.com/gcv7SrhvJb\n\u0026mdash; Design Reviewed | Graphic Design History (@DesignReviewed) January 17, 2019 Vimeo Simple Shortcode\rbilibilibi Shortcode\rGist Shortcode\rGitlab Snippets Shortcode\rQuote Shortcode\rStack adds a quote shortcode. For example:\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― A famous person, The book they wrote Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― Anonymous book Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― Some book Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― Somebody","date":"2019-03-10T00:00:00Z","permalink":"http://localhost:1313/p/rich-content/","title":"Rich Content"},{"content":"Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\nExierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\nComas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et Vagus elidunt\rThe Van de Graaf Canon\nMane refeci capiebant unda mulcebat\rVicta caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","date":"2019-03-09T00:00:00Z","image":"http://localhost:1313/p/placeholder-text/matt-le-SJSpo9hQf7s-unsplash_hu10664154974910995856.jpg","permalink":"http://localhost:1313/p/placeholder-text/","title":"Placeholder Text"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\nCreate a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so: 1 2 3 {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }} To enable KaTeX globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTeX on a per page basis include the parameter math: true in content files Note: Use the online reference of Supported TeX Functions\nExamples\rInline math: $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$\nBlock math: $$\r\\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$","date":"2019-03-08T00:00:00Z","permalink":"http://localhost:1313/p/math-typesetting/","title":"Math Typesetting"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 :see_no_evil: 🙉 :hear_no_evil: 🙊 :speak_no_evil:\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1 2 3 .emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; } ","date":"2019-03-05T00:00:00Z","image":"http://localhost:1313/p/emoji-support/the-creative-exchange-d2zvqp3fpro-unsplash_hu5876398126655421130.jpg","permalink":"http://localhost:1313/p/emoji-support/","title":"Emoji Support"}]